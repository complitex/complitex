<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.keconnection.heatmeter.service.ServiceContractBean">
    <resultMap id="serviceContractResultMap" type="org.complitex.keconnection.heatmeter.entity.ServiceContract">
        <id column="id" property="id"/>
        <result column="begin_date" property="beginDate"/>
        <result column="end_date" property="endDate"/>
        <result column="number" property="number"/>
        <result column="service_provider_id" property="serviceProviderId"/>
        <result column="organization_id" property="organizationId"/>

        <collection property="serviceContractServices" resultMap="serviceContractServicesResultMap" columnPrefix="se__"/>
        <collection property="serviceContractBuildings" resultMap="serviceContractBuildingResultMap" columnPrefix="bu__"/>
    </resultMap>

    <resultMap id="serviceContractServicesResultMap" type="org.complitex.keconnection.heatmeter.entity.ServiceContractService">
        <id column="id" property="id"/>
        <result column="service_id" property="serviceId"/>
        <result column="service_contract_id" property="serviceContractId"/>
    </resultMap>

    <resultMap id="serviceContractBuildingResultMap" type="org.complitex.keconnection.heatmeter.entity.ServiceContractBuilding">
        <id column="id" property="id"/>
        <result column="building_code_id" property="buildingCodeId"/>
        <result column="service_contract_id" property="serviceContractId"/>
    </resultMap>


    <!-- Service Contract -->

    <insert id="insertServiceContract" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContract"
            useGeneratedKeys="true" keyProperty="id">
        insert into service_contract (begin_date, end_date, number, service_provider_id, organization_id)
            value (#{beginDate}, #{endDate}, #{number}, #{serviceProviderId}, #{organizationId});
    </insert>

    <update id="updateServiceContract" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContract">
        update service_contract set begin_date = #{beginDate}, end_date = #{endDate}, number = #{number},
            service_provider_id = #{serviceProviderId}, organization_id = #{organizationId}
    </update>

    <select id="selectServiceContract" parameterType="long" resultMap="serviceContractResultMap">
        select s.*,
            se.id as se__id, se.service_object_id as se__service_object_id, se.service_contract_id as se__service_contract_id,
            bu.id as bu__id, bu.building_code_id as bu__building_code_id, bu.service_contract_id as bu__service_contract_id
        from service_contract s
            left join service_contract_service se on s.id = se.service_contract_id
            left join service_contract_building bu on s.id = bu.service_contract_id
        where s.id = #{id}
    </select>

    <sql id="selectServiceWhere">
        <where>
            <if test="object.beginDate != null">and begin_date > #{object.beginDate}</if>
            <if test="object.endDate != null">and end_date > #{object.endDate}</if>
            <if test="object.number != null">and number = #{object.number}</if>
            <if test="object.serviceProviderId">and service_provider_id = #{object.serviceProviderId}</if>
            <if test="object.organizationId">and organization_id = #{object.organizationId}</if>
        </where>
    </sql>

    <select id="selectServiceContractList" parameterType="org.complitex.common.entity.FilterWrapper" resultMap="serviceContractResultMap">
        select * from service_contract <include refid="selectServiceWhere"/>
        order by ${sortProperty} ${asc} limit #{first}, #{count}
    </select>

    <select id="selectServiceContractListCount" parameterType="org.complitex.common.entity.FilterWrapper" resultType="long">
        select count(*) from service_contract <include refid="selectServiceWhere"/>
    </select>

    <delete id="deleteServiceContract" parameterType="long">
        delete from service_contract where id = #{id}
    </delete>


    <!-- Service Contract Service -->

    <insert id="insertServiceContractService" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContractService"
            useGeneratedKeys="true" keyProperty="id">
        insert into service_contract_service (service_id, service_contract_id) value (#{serviceId}, #{serviceContractId})
    </insert>

    <update id="updateServiceContractService" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContractService">
        update service_contract_service set service_id = #{serviceId} where id = #{id}
    </update>

    <delete id="deleteServiceContractService" parameterType="long">
        delete from service_contract_service where id = #{id}
    </delete>


    <!-- Service Contract Building -->

    <insert id="insertServiceContractBuilding" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContractBuilding"
            useGeneratedKeys="true" keyProperty="id">
        insert into service_contract_building (building_code_id, service_contract_id) value (#{buildingCodeId}, #{serviceContractId})
    </insert>

    <update id="updateServiceContractBuilding" parameterType="org.complitex.keconnection.heatmeter.entity.ServiceContractBuilding">
        update service_contract_building set building_code_id = #{buildingCodeId} where id = #{id}
    </update>

    <delete id="deleteServiceContractBuilding" parameterType="long">
        delete from service_contract_building where id = #{id}
    </delete>

    <select id="selectServiceContractBuildingList" parameterType="org.complitex.common.entity.FilterWrapper">
        select * from service_contract_building
        <where>
            <if test="object.buildingCodeId != null">and building_code_id = #{buildingCodeId}</if>
            <if test="object.serviceContractId != null">and service_contract_id = #{serviceContractId}</if>
        </where>
    </select>
</mapper>
        
        