<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.correction.service.AddressCorrectionBean">


    <!--Street-->

    <select id="selectStreetCorrectionsByBuilding" resultMap="streetCorrectionResultMap"
            parameterType="map">
        SELECT c.* FROM `street_correction` c
            JOIN `building_correction` b ON (b.`object_id` = #{buildingId} AND b.`organization_id` = #{calcCenterId})
        WHERE c.`organization_id` = #{calcCenterId} AND c.`object_id` = #{streetId}
    </select>


    <!--Building-->

    <insert id="insertBuildingCorrection" parameterType="org.complitex.correction.entity.BuildingCorrection"
            keyProperty="id" useGeneratedKeys="true">
        insert into `building_correction`(`street_id`, `object_id`, `external_id`,  `correction`, `correction_corp`,
          `begin_date`, `end_date`, `organization_id`, `user_organization_id`, `module_id`)
        values (#{streetId}, #{objectId}, #{externalId}, TO_CYRILLIC(#{correction}), TO_CYRILLIC(#{correctionCorp}), #{beginDate}, #{endDate},
           #{organizationId}, #{userOrganizationId}, #{moduleId})
    </insert>

    <update id="updateBuildingCorrection" parameterType="org.complitex.correction.entity.BuildingCorrection">
        update `building_correction` set `street_id` = #{streetId}, `organization_id` = #{organizationId}, `correction` = TO_CYRILLIC(#{correction}),
            `correction_corp` = TO_CYRILLIC(#{correctionCorp}), `object_id` = #{objectId}, `external_id` = #{externalId},
            `module_id` = #{moduleId}, `user_organization_id` = #{userOrganizationId}
        where `id` = #{id}
    </update>

    <select id="selectBuildingObjectExists" parameterType="map" resultType="boolean">
        select count(b.`object_id`) > 0 from `building` b
        join `building_attribute` num on (num.`object_id` = b.`object_id` and num.`status` = 1
          and num.`entity_attribute_id` = 500)
        join `building_string_value` num_sc on (num_sc.`id` = num.`value_id`)
        left join `building_attribute` corp on (corp.`object_id` = b.`object_id` AND corp.`status` = 1
          and corp.`entity_attribute_id` = 501)
        left join `building_string_value` corp_sc on (corp_sc.`id` = corp.`value_id`)
        where b.`status` = 1
        and TO_CYRILLIC(num_sc.`value`) = #{buildingNumber}
        and
        <choose>
            <when test="buildingCorp == null">
                corp_sc.`value` IS NULL
            </when>
            <otherwise>
                TO_CYRILLIC(corp_sc.`value`) = #{buildingCorp}
            </otherwise>
        </choose>
        AND
        b.`object_id` = #{objectId}
    </select>

    <sql id="buildingFilter">
        <where>
            <if test="internalObject != null">
                <if test="cityObject != null">
                    and csc.`value` LIKE CONCAT('%', #{cityObject}, '%')
                </if>
                <if test="streetObject != null">
                    and ssc.`value` LIKE CONCAT('%', #{streetObject}, '%')
                </if>
                <if test="buildingObject != null">
                    and basc.`value` LIKE CONCAT('%', #{buildingObject}, '%')
                </if>
                <if test="smallObject">
                    and (csc.`value` LIKE CONCAT('%', #{internalObject}, '%')
                    or ssc.`value` LIKE CONCAT('%', #{internalObject}, '%')
                    or basc.`value` LIKE CONCAT('%', #{internalObject}, '%'))
                </if>
            </if>
            <if test="correction != null">
                <if test="cityCorrection != null">
                    and cc.`correction` LIKE CONCAT('%', #{cityCorrection}, '%')
                </if>
                <if test="streetCorrection != null">
                    and sc.`correction` LIKE CONCAT('%', #{streetCorrection}, '%')
                </if>
                <if test="buildingCorrection != null">
                    and c.`correction` LIKE CONCAT('%', #{buildingCorrection}, '%')
                </if>
                <if test="smallCorrection">
                    and (cc.`correction` LIKE CONCAT('%', #{correction}, '%')
                    or sc.`correction` LIKE CONCAT('%', #{correction}, '%')
                    or c.`correction` LIKE CONCAT('%', #{correction}, '%'))
                </if>
            </if>

            <if test="externalId != null">
                and c.`external_id` LIKE CONCAT('%', #{externalId}, '%')
            </if>
            <if test="organizationId != null">
                and c.`organization_id` = #{organizationId}
            </if>
            <if test="userOrganizationId != null">
                and c.`user_organization_id` = #{userOrganizationId}
            </if>
            <if test="moduleId != null">
                and c.`module_id` = #{moduleId}
            </if>
            <if test="not admin">
                <if test="outerOrganizationsString != null">
                    and (c.`organization_id` in ${outerOrganizationsString})
                </if>
                and (c.`user_organization_id` is null or c.`user_organization_id` in ${userOrganizationsString})
            </if>
        </where>
    </sql>

    <sql id="buildingJoin">
        left join `organization_attribute` oa on (oa.`object_id` = c.`organization_id`
        and oa.`status` = 1 and oa.`entity_attribute_id` = 900)
        left join `organization_string_value` osc on (osc.`id` = oa.`value_id` and osc.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_value` osc_sys ON (osc_sys.`id` = oa.`value_id` and osc_sys.`locale_id` = (SELECT l.`id` FROM `locale` l WHERE l.`system` = 1))

        left join `organization_attribute` oa_i on (oa_i.`object_id` = c.`module_id`
        and oa_i.`status` = 1 and oa_i.`entity_attribute_id` = 900)
        left join `organization_string_value` osc_i on (osc_i.`id` = oa_i.`value_id` and osc_i.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_value` osc_i_sys ON (osc_i_sys.`id` = oa_i.`value_id` and osc_i_sys.`locale_id` = (SELECT l.`id` FROM `locale` l WHERE l.`system` = 1))

        left join `organization_attribute` uoa on (uoa.`object_id` = c.`user_organization_id`
        and uoa.`status` = 1 and uoa.`entity_attribute_id` = 900)
        left join `organization_string_value` uosc on (uosc.`id` = uoa.`value_id` and uosc.`locale_id` = #{localeId})
        LEFT JOIN `organization_string_value` uosc_sys ON (uosc_sys.`id` = uoa.`value_id` and uosc_sys.`locale_id` = (SELECT l.`id` FROM `locale` l WHERE l.`system` = 1))

        <if test="orderByClause == 'object' or internalObject != null">
            left join `building` b on (b.`object_id` = c.`object_id`)
            left join `building_address` ba on (ba.`object_id` = b.`parent_id`)
            left join `building_address_attribute` baa on (baa.`object_id` = ba.`object_id` and baa.`entity_attribute_id` = 1500)
            left join `building_address_string_value` basc on (basc.`id` = baa.`value_id` and basc.`locale_id` = #{localeId})

            left join `street` s on (s.`object_id` = ba.`parent_id`)
            left join `street_attribute` sa on (sa.`object_id` = ba.`parent_id`)
            left join `street_string_value` ssc on (ssc.`id` = sa.`value_id` and ssc.`locale_id` = #{localeId})

            left join `city` on (`city`.`object_id` = s.`parent_id`)
            left join `city_attribute` ca on (ca.`object_id` = s.`parent_id`)
            left join `city_string_value` csc on (csc.`id` = ca.`value_id` and csc.`locale_id` = #{localeId})
        </if>

        <if test="orderByClause == 'correction' or correction != null">
            left join `street_correction` sc on (sc.`id` = c.`parent_id`)
            left join `city_correction` cc on (cc.`id` = sc.`parent_id`)
        </if>
    </sql>
    
</mapper>