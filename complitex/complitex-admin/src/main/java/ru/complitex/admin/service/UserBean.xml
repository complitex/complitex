<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.complitex.admin.service.UserBean">
    <resultMap id="userResultMap" type="ru.complitex.common.entity.User">
        <id column="user_id" property="id"/>
        <result column="login" property="login"/>
        <result column="password" property="password"/>
        <result column="user_info_object_id" property="userInfoObjectId"/>
        <collection property="userGroups" ofType="ru.complitex.common.entity.UserGroup">
            <id column="user_group_id" property="id"/>
            <result column="user_group_login" property="login"/>
            <result column="group_name" property="groupName"/>
        </collection>
        <collection property="userOrganizations" ofType="ru.complitex.common.entity.UserOrganization">
            <id column="user_organization_id" property="id"/>
            <result column="organization_object_id" property="organizationObjectId"/>
            <result column="main" property="main"/>
        </collection>
    </resultMap>

    <select id="isUniqueLogin" resultType="boolean" parameterType="string">
        SELECT count(1) = 0 FROM "user" u WHERE u."login" = #{login}
    </select>

    <select id="selectUser" resultMap="userResultMap" parameterType="long">
        SELECT DISTINCT u.id AS user_id,
            u.login AS login,
            u.password AS password,
            u.user_info_object_id AS user_info_object_id,
            g.id AS user_group_id,
            g.login AS user_group_login,
            g.group_name AS group_name,
            o.id AS user_organization_id,
            o.organization_object_id AS organization_object_id,
            o.main AS main
        FROM "user" u
            LEFT JOIN "usergroup" g ON u."login" = g."login"
            LEFT JOIN "user_organization" o ON u."id" = o."user_id"
        WHERE u.id = #{id}
    </select>

    <sql id="userFilter">
        FROM "user" u
            LEFT JOIN "usergroup" g ON u."login" = g."login"
            LEFT JOIN "user_info" ui ON u."user_info_object_id" = ui."object_id"
            LEFT JOIN "user_organization" o ON u."id" = o."user_id"

            LEFT JOIN "user_info_attribute" uia_ln ON (ui."object_id" = uia_ln."object_id"
                AND uia_ln."entity_attribute_id" = 1000)
            LEFT JOIN "last_name" ln ON uia_ln."value_id" = ln."id"

            LEFT JOIN "user_info_attribute" uia_fn ON (ui."object_id" = uia_fn."object_id"
                AND uia_fn."entity_attribute_id" = 1001)
            LEFT JOIN "first_name" fn ON uia_fn."value_id" = fn."id"

            LEFT JOIN "user_info_attribute" uia_mn ON (ui."object_id" = uia_mn."object_id"
                AND uia_mn."entity_attribute_id" = 1002)
            LEFT JOIN "middle_name" mn ON uia_mn."value_id" = mn."id"

        <where>
            <if test="login != null">u.login LIKE concat('%', #{login}, '%')</if>
            <if test="groupName != null">AND g."group_name" = #{groupName}</if>
            <if test="organizationObjectId != null">AND o."organization_object_id" = #{organizationObjectId}</if>
            <foreach collection="attributeFilters" item="item" index="index">
                <if test="item.value != null">
                    <choose>
                        <when test="item.entityAttributeId == '1000'">
                            AND ln."name" LIKE concat('%', #{item.value}, '%')
                        </when>
                        <when test="item.entityAttributeId == '1001'">
                            AND fn."name" LIKE concat('%', #{item.value}, '%')
                        </when>
                        <when test="item.entityAttributeId == '1002'">
                            AND mn."name" LIKE concat('%', #{item.value}, '%')
                        </when>
                    </choose>
                </if>
            </foreach>
        </where>

        GROUP BY  u."id", u."login", ln."name", fn."name", mn."name"

        <if test="sortProperty == 'login'">
            ORDER BY u."login" <choose><when test="ascending">ASC</when><otherwise>DESC</otherwise></choose>
        </if>

        <if test="sortAttributeTypeId != null">
            <choose>
                <when test="sortAttributeTypeId== '1000'">
                    ORDER BY ln."name"
                </when>
                <when test="sortAttributeTypeId == '1001'">
                    ORDER BY fn."name"
                </when>
                <when test="sortAttributeTypeId == '1002'">
                    ORDER BY mn."name"
                </when>
            </choose>
            <choose><when test="ascending">ASC</when><otherwise>DESC</otherwise></choose>
        </if>
    </sql>

    <select id="selectUsers" resultMap="userResultMap" parameterType="ru.complitex.admin.service.UserFilter">
        SELECT
            uc.*,
            gc.id AS user_group_id, gc.login AS user_group_login, gc.group_name AS group_name,
            o.id AS user_organization_id, o.organization_object_id AS organization_object_id, o.main AS main
        FROM
        (SELECT
            distinct u.id AS user_id,
            u.login AS login,
            u.password AS password,
            u.user_info_object_id AS user_info_object_id
        <include refid="userFilter"/>
        OFFSET #{first} LIMIT #{count}
        ) AS uc
        LEFT JOIN "usergroup" gc ON uc."login" = gc."login"
        LEFT JOIN "user_organization" o ON uc."user_id" = o."user_id"
    </select>

    <select id="selectUsersCount" resultType="long" parameterType="ru.complitex.admin.service.UserFilter">
        SELECT count(distinct u.id)
        <include refid="userFilter"/>
    </select>

    <insert id="insertUser" parameterType="ru.complitex.common.entity.User" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO "user" ("login", "password", "user_info_object_id") VALUES (#{login}, #{password}, #{userInfoObjectId})
    </insert>

    <update id="updateUser" parameterType="ru.complitex.common.entity.User">
        UPDATE "user"
        <set>
            <if test="password != null"> "password" = #{password},</if>
            <if test="userInfoObjectId != null"> "user_info_object_id" = #{userInfoObjectId}</if>
        </set>
        WHERE id = #{id}
    </update>

    <insert id="insertUserGroup" parameterType="ru.complitex.common.entity.UserGroup">
        INSERT INTO "usergroup" ("login", "group_name") VALUES (#{login}, #{groupName})
    </insert>

    <delete id="deleteUserGroup" parameterType="long">
        DELETE FROM "usergroup" WHERE id = #{id}
    </delete>

    <insert id="insertUserOrganization" parameterType="ru.complitex.common.entity.UserOrganization">
        INSERT INTO "user_organization" ("user_id", "organization_object_id", "main")
            values (#{userId}, #{organizationObjectId}, #{main})
    </insert>

    <delete id="deleteUserOrganization" parameterType="long">
        DELETE FROM "user_organization" WHERE id = #{id}
    </delete>

    <update id="updateUserOrganization" parameterType="ru.complitex.common.entity.UserOrganization">
        UPDATE "user_organization" SET main = #{main} WHERE id = #{id}
    </update>
</mapper>
