<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.complitex.common.strategy.DomainObjectStrategy">
    <resultMap id="domainObjectResultMap" type="org.complitex.common.entity.DomainObject">
        <id column="pk_id" property="pkId"/>
        <result column="object_id" property="objectId"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <result column="status" property="status"/>
        <result column="parent_id" property="parentId"/>
        <result column="parent_entity_id" property="parentEntityId"/>
        <result column="permission_id" property="permissionId"/>

        <collection property="attributes" resultMap="attributeResultMap" columnPrefix="attr__"/>
    </resultMap>

    <resultMap id="attributeResultMap" type="org.complitex.common.entity.Attribute">
        <id column="pk_id" property="pkId"/>
        <result column="value_id" property="valueId"/>
        <result column="attribute_id" property="attributeId"/>
        <result column="object_id" property="objectId"/>
        <result column="entity_attribute_id" property="entityAttributeId"/>
        <result column="start_date" property="startDate"/>
        <result column="status" property="status"/>
        <result column="end_date" property="endDate"/>

        <collection property="stringValues" resultMap="stringValueResultMap" columnPrefix="str__"/>
    </resultMap>

    <resultMap id="stringValueResultMap" type="org.complitex.common.entity.StringValue">
        <id column="pk_id" property="pkId"/>
        <result column="id" property="id"/>
        <result column="locale_id" property="localeId"/>
        <result column="value" property="value"/>
    </resultMap>

    <resultMap id="localeResultMap" type="org.complitex.common.entity.StringLocale">
        <constructor>
            <idArg column="id" javaType="Long"/>
            <arg column="locale" javaType="String"/>
            <arg column="system" javaType="Boolean"/>
            <arg column="alternative" javaType="Boolean"/>
        </constructor>
    </resultMap>

    <resultMap id="permissionInfoResultMap" type="org.complitex.common.entity.PermissionInfo">
        <id column="object_id" property="id"/>
        <result column="permission_id" property="permissionId"/>
    </resultMap>

    <!--suppress SqlResolve -->
    <insert id="insertDomainObject" parameterType="org.complitex.common.entity.DomainObject">
        INSERT INTO "${entityName}" ("object_id", "status", "start_date", "end_date", "parent_id", "parent_entity_id", "permission_id")
            VALUES (#{objectId}, #{status}, #{startDate}, #{endDate}, #{parentId}, #{parentEntityId}, #{permissionId})
    </insert>

    <!--suppress SqlResolve -->
    <select id="selectDomainObject" parameterType="org.complitex.common.entity.DomainObjectFilter" resultMap="domainObjectResultMap">
        SELECT e.* FROM "${entityName}" e
        WHERE (e."status" IN (1, 0)) AND e."object_id" = #{objectId}
        <include refid="sqlPermissionFilter"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomainObjectTree" parameterType="org.complitex.common.entity.DomainObjectFilter" resultMap="domainObjectResultMap">
        SELECT obj.*,
            attr.pk_id as attr__pk_id, attr.value_id as attr__value_id, attr.attribute_id as attr__attribute_id,
            attr.object_id as attr__object_id, attr.entity_attribute_id as attr__entity_attribute_id,
            attr.start_date as attr__start_date, attr.status as attr__status, attr.end_date as attr__end_date,
            str.pk_id as str__pk_id, str.id as str__id, str.locale_id as str__locale_id, str.value as str__value
        FROM ${entityName} obj
        LEFT JOIN ${entityName}_attribute attr ON (obj.object_id = attr.object_id and attr.end_date is null)
        LEFT JOIN entity_attribute ea ON ea.id = attr.entity_attribute_id
        LEFT JOIN ${entityName}_string_value str ON (str.id = attr.value_id and ea.value_type_id = 0)
        WHERE obj.end_date IS NULL AND obj.object_id = ${objectId}
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomainObjectId" resultType="long" parameterType="map">
        SELECT e."object_id" FROM "${entityName}" e WHERE e."external_id" = #{externalId} and "status" = 1
    </select>

    <!--suppress SqlResolve -->
    <sql id="sqlOrderByAttributeTypeId">
        SELECT sc."value" FROM "${entityName}_string_value" sc WHERE sc."locale_id" = #{localeId} AND sc."id" =
            (SELECT orderByAttr."value_id" FROM "${entityName}_attribute" orderByAttr WHERE orderByAttr."object_id" = e."object_id"
                AND orderByAttr."status" = 1 AND orderByAttr."entity_attribute_id" = #{orderByAttributeTypeId})
    </sql>

    <sql id="sqlOrderBy">
        <if test="orderByAttributeTypeId != null">
            ORDER BY
            <choose>
                <when test="orderByNumber">
                    LPAD(
                    (<include refid="org.complitex.common.strategy.DomainObjectStrategy.sqlOrderByAttributeTypeId"/>),
                    15, ' ')
                </when>
                <otherwise>
                    (<include refid="org.complitex.common.strategy.DomainObjectStrategy.sqlOrderByAttributeTypeId"/>)
                </otherwise>
            </choose>

            <choose>
                <when test="asc">
                    ASC
                </when>
                <otherwise>
                    DESC
                </otherwise>
            </choose>
        </if>
    </sql>

    <sql id="sqlPermissionFilter">
        <if test="not admin and userPermissionString != null">
            AND (e."permission_id" IN ${userPermissionString})
        </if>
    </sql>

    <sql id="sqlStatusFilter">
        <choose>
            <when test="status == 'INACTIVE'">
                (e."status" = 0)
            </when>
            <when test="status == 'ACTIVE'">
                (e."status" = 1)
            </when>
            <when test="status == 'ALL'">
                (e."status" IN (1, 0))
            </when>
            <otherwise>
                e."status" = #{status}
            </otherwise>
        </choose>
    </sql>

    <sql id="sqlFilter">
        <if test="objectId != null">
            AND e."object_id" = #{objectId}
        </if>
        <if test="externalId != null">
            AND e."externalId" = #{externalId}
        </if>
        <foreach item="attributeFilter" collection="attributeFilters">
            <if test="attributeFilter.value != null or nullValue or attributeFilter.localeId != null">
                <choose>
                    <when test="attributeFilter.value != null or nullValue ">
                        AND EXISTS (SELECT 1 FROM "${entityName}_attribute" attr WHERE attr."object_id" = e."object_id"
                            AND attr."status" = 1 AND attr."entity_attribute_id" = #{attributeFilter.entityAttributeId}
                            AND attr."value_id" IN (SELECT sc."id" FROM "${entityName}_string_value" sc
                            WHERE sc."value"
                                <choose>
                                    <when test="comparisonType == 'LIKE'">
                                        LIKE CONCAT('%', #{attributeFilter.value}, '%')
                                    </when>
                                    <when test="comparisonType == 'EQUALITY'">
                                        <if test="attributeFilter.value != null">
                                            = #{attributeFilter.value}
                                        </if>
                                        <if test="attributeFilter.value == null">
                                            IS NULL OR sc."value" = ''
                                        </if>
                                    </when>
                                </choose>
                            <if test="attributeFilter.localeId != null">AND sc."locale_id" = #{attributeFilter.localeId}</if>
                            )
                        )
                    </when>
                    <otherwise>
                        AND (
                            EXISTS (SELECT 1 FROM "${entityName}_attribute" attr LEFT JOIN "${entityName}_string_value" sc
                                ON sc."id" = attr."value_id" WHERE attr."object_id" = e."object_id" AND attr."status" = 1
                                AND attr."entity_attribute_id" = #{attributeFilter.entityAttributeId}
                                AND sc."value" is null AND sc."locale_id" = #{attributeFilter.localeId})

                            OR NOT EXISTS (SELECT 1 FROM "${entityName}_attribute" attr LEFT JOIN "${entityName}_string_value" sc
                                ON sc."id" = attr."value_id" WHERE attr."object_id" = e."object_id" AND attr."status" = 1
                                AND attr."entity_attribute_id" = #{attributeFilter.entityAttributeId}
                                AND sc."locale_id" = #{attributeFilter.localeId})
                        )
                    </otherwise>
                </choose>
            </if>

            <if test="attributeFilter.valueId != null">
                AND EXISTS(SELECT 1 FROM "${entityName}_attribute" attr WHERE attr."object_id" = e."object_id"
                    AND attr."status" = 1 AND attr."entity_attribute_id" = #{attributeFilter.entityAttributeId}
                    AND attr."value_id" = #{attributeFilter.valueId}
                )
            </if>
        </foreach>
        <if test="parentId != null and parentEntity != null">
            AND e."parent_entity_id" = (SELECT ent."id" FROM "entity" ent WHERE ent."entity" = #{parentEntity}) AND e."parent_id" = #{parentId}
        </if>

        <if test="value != null">
            AND EXISTS(
              SELECT 1 FROM "${entityName}_attribute" attr WHERE attr."object_id" = e."object_id"
                AND attr."status" = 1 AND attr."value_id" IN (SELECT sc."id" FROM "${entityName}_string_value" sc
                  WHERE sc."value" LIKE CONCAT('%', #{value}, '%'))
            )
        </if>
    </sql>

    <sql id="sqlLimit">
        <if test="count > 0">
            OFFSET ${first} LIMIT ${count}
        </if>
    </sql>

    <!--suppress SqlResolve -->
    <select id="selectDomainObjects" parameterType="org.complitex.common.entity.DomainObjectFilter" resultMap="domainObjectResultMap" >
        SELECT e.*
        FROM "${entityName}" e WHERE
        <include refid="sqlStatusFilter"/>
        <include refid="sqlPermissionFilter"/>
        <include refid="sqlFilter"/>
        <include refid="sqlOrderBy"/>
        <include refid="sqlLimit"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectDomainObjectCount" resultType="long" parameterType="org.complitex.common.entity.DomainObjectFilter">
        SELECT COUNT(1) FROM "${entityName}" e WHERE
        <include refid="sqlStatusFilter"/>
        <include refid="sqlPermissionFilter"/>
        <include refid="sqlFilter"/>
    </select>

    <!--suppress SqlResolve -->
    <update id="updateDomainObject" parameterType="org.complitex.common.entity.DomainObject">
        UPDATE "${entityName}" SET "end_date" = #{endDate}, "status" = #{status}
          WHERE "object_id" = #{objectId} AND "start_date" = #{startDate}
    </update>

    <!--suppress SqlResolve -->
    <select id="defaultValidation" resultType="long" parameterType="map">
        SELECT DISTINCT e."object_id" FROM "${entity}" e
            JOIN "${entity}_attribute" a ON (e."object_id" = a."object_id" AND a."status" = 1)
            JOIN "${entity}_string_value" sc ON (a."value_id" = sc."id")
        WHERE (e."status" IN (1, 0)) AND sc."locale_id" = #{localeId} AND a."entity_attribute_id" = #{entityAttributeId}
            AND sc."value" = #{text}
        <choose>
            <when test="parentEntityId != null and parentId != null">
                AND e."parent_entity_id" = #{parentEntityId} AND e."parent_id" = #{parentId}
            </when>
            <otherwise>
                AND e."parent_entity_id" IS NULL AND e."parent_id" IS NULL
            </otherwise>
        </choose>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectParentInSearchComponent" parameterType="map" resultType="map">
        SELECT (SELECT ent."entity" FROM "entity" ent WHERE ent."id" = e."parent_entity_id") parentEntity,
            e."parent_id" parentId FROM "${entityName}" e WHERE e."object_id" = #{objectId}
        <choose>
            <when test="startDate != null">
                AND e."start_date" =
                (SELECT MAX(e1."start_date") FROM "${entityName}" e1 WHERE e1."object_id" = #{objectId} AND e1."start_date" <![CDATA[ <= ]]> #{startDate})
            </when>
            <otherwise>
                AND (e."status" IN (1, 0))
            </otherwise>
        </choose>
    </select>

    <!--suppress SqlResolve -->
    <select id="historyDates" resultType="date" parameterType="org.complitex.common.entity.DomainObjectFilter">
        SELECT e."start_date" FROM "${entityName}" e WHERE e."object_id"= #{objectId}
        UNION
        SELECT e."end_date" FROM "${entityName}" e WHERE e."object_id"= #{objectId}
        UNION
        SELECT aa."start_date" FROM "${entityName}_attribute" aa WHERE aa."object_id"= #{objectId}
        UNION
        SELECT aa."end_date" FROM "${entityName}_attribute" aa WHERE aa."object_id"= #{objectId}
    </select>

    <!--suppress SqlResolve -->
    <sql id="sqlSelectHistoryObject">
        SELECT e.* FROM "${entityName}" e WHERE e."object_id" = #{objectId} AND e."start_date" =
            (SELECT MAX(e1."start_date") FROM "${entityName}" e1 WHERE e1."object_id" = #{objectId}
                AND e1."start_date" <![CDATA[ <= ]]> #{startDate})
    </sql>

    <select id="selectHistoryObject" parameterType="org.complitex.common.entity.DomainObjectFilter"
            resultMap="domainObjectResultMap">
        <include refid="sqlSelectHistoryObject"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="selectChildrenPermissionInfo" parameterType="map" resultMap="permissionInfoResultMap">
        SELECT e."object_id", e."permission_id" FROM "${entity}" e WHERE e."status" IN (1, 0)
            AND e."parent_id" = #{parentId} AND e."parent_entity_id" = (SELECT ent."id" FROM "entity" ent
              WHERE ent."entity" = #{parentEntity})
              ORDER BY e."object_id"
        <include refid="sqlLimit"/>
    </select>

    <!--suppress SqlResolve -->
    <update id="updatePermissionId" parameterType="map">
        UPDATE "${entity}" e SET "permission_id" = #{permissionId} WHERE e."status" IN (1, 0)
          AND e."object_id" = #{objectId}
    </update>

    <!--suppress SqlResolve -->
    <select id="selectChildrenActivityInfo" parameterType="map" resultType="long">
        SELECT e."object_id" FROM "${entity}" e WHERE e."parent_id" = #{parentId}  AND e."parent_entity_id" =
            (SELECT ent."id" FROM "entity" ent WHERE ent."entity" = #{parentEntity})
        ORDER BY e."object_id"
        <include refid="sqlLimit"/>
    </select>

    <!--suppress SqlResolve -->
    <update id="updateChildrenActivity" parameterType="map">
        UPDATE "${entity}" e SET "status" = #{status} WHERE e."parent_id" = #{parentId} AND e."parent_entity_id" =
            (SELECT ent."id" FROM "entity" ent WHERE ent."entity" = #{parentEntity})
        AND
        <choose>
            <when test="enabled">
                e."status" = 1
            </when>
            <otherwise>
                e."status" = 0
            </otherwise>
        </choose>
    </update>

    <!--suppress SqlResolve -->
    <delete id="deleteDomainObject" parameterType="map">
        DELETE FROM "${entityName}" WHERE "object_id" = #{objectId}
    </delete>

    <!--suppress SqlResolve -->
    <select id="childrenExistCheck" parameterType="map" resultType="int">
        SELECT 1 WHERE EXISTS(SELECT e."object_id" FROM "${childEntity}" e WHERE e."parent_id" = #{objectId}
            AND e."parent_entity_id" = #{entityId})
    </select>

    <!--suppress SqlResolve -->
    <select id="referenceExistCheck" parameterType="map" resultType="int">
        SELECT 1 WHERE EXISTS(SELECT a."object_id" FROM "${referenceEntity}_attribute" a
            WHERE a."value_id" = #{objectId} AND a."entity_attribute_id" = #{entityAttributeId})
    </select>

    <!--suppress SqlResolve -->
    <insert id="insertAttribute" parameterType="org.complitex.common.entity.Attribute">
        INSERT INTO "${entityName}_attribute" ("attribute_id", "object_id", "entity_attribute_id", "status", "start_date", "end_date", "value_id")
            VALUES (#{attributeId}, #{objectId}, #{entityAttributeId}, #{status}, #{startDate}, #{endDate}, #{valueId})
    </insert>

    <!--suppress SqlResolve -->
    <update id="updateAttribute" parameterType="org.complitex.common.entity.Attribute">
        UPDATE "${entityName}_attribute" SET "end_date" = #{endDate}, "status" = #{status}
        WHERE "attribute_id" = #{attributeId} AND "object_id" = #{objectId} AND "entity_attribute_id" = #{entityAttributeId}
          AND "start_date" = #{startDate}
    </update>

    <!--suppress SqlResolve -->
    <update id="archiveAttributes" parameterType="map">
        UPDATE "${entityName}_attribute" SET "end_date" = #{endDate}, "status" = 2
        WHERE"status" IN (1, 0) AND "entity_attribute_id" IN
            <foreach item="id" collection="attributeTypeIds" open="(" separator="," close=")">
                #{id}
            </foreach>
    </update>

    <!--suppress SqlResolve -->
    <update id="archiveObjectAttributes" parameterType="map">
        UPDATE "${entityName}_attribute" SET "end_date" = #{endDate}, "status" = 2
            WHERE "object_id" = #{objectId} AND "status" IN (1, 0)
    </update>

    <!--suppress SqlResolve -->
    <select id="selectAttributes" parameterType="map" resultMap="attributeResultMap">
        SELECT a.* FROM "${entityName}_attribute" a
          WHERE  a."object_id" = #{objectId} AND a."status" = 1
            ORDER BY a."entity_attribute_id", a."attribute_id"
    </select>

    <!--suppress SqlResolve -->
    <select id="selectAttribute" parameterType="map" resultMap="attributeResultMap">
        SELECT * FROM "${entityName}_attribute" WHERE  "object_id" = #{objectId}
          AND "entity_attribute_id" = #{entityAttributeId} AND "status" = 1
    </select>

    <!--suppress SqlResolve -->
    <select id="selectHistoryAttributes" parameterType="org.complitex.common.entity.DomainObjectFilter"
            resultMap="attributeResultMap">
        SELECT aa.*
        FROM "${entityName}_attribute" aa
        WHERE aa."object_id" = #{objectId}
        AND aa."start_date" <![CDATA[ <= ]]> #{startDate} AND ((aa."end_date" IS NULL) OR (aa."end_date" <![CDATA[ > ]]> #{startDate}))
        ORDER BY aa."entity_attribute_id", aa."attribute_id"
    </select>

    <!--suppress SqlResolve -->
    <delete id="deleteAttributes" parameterType="map">
        DELETE FROM "${entityName}_attribute" WHERE "object_id" = #{objectId}
    </delete>

    <select id="loadAllLocales" resultMap="localeResultMap">
        SELECT l.* FROM "locale" l
    </select>

    <!--suppress SqlResolve -->
    <insert id="insertStringValue" parameterType="org.complitex.common.entity.StringValue">
        INSERT INTO "${entityName}_string_value"("id", "locale_id", "value") VALUES (#{id}, #{localeId}, #{value})
    </insert>

    <!--suppress SqlResolve -->
    <select id="selectStringValues" parameterType="map" resultMap="stringValueResultMap">
        SELECT sc.* FROM "${entityName}_string_value" sc WHERE sc."id" = #{id} ORDER BY "locale_id"
    </select>

    <!--suppress SqlResolve -->
    <insert id="insertDescriptionData" parameterType="org.complitex.common.entity.StringValue">
        INSERT INTO "entity_string_value"("id", "locale_id", "value") VALUES (#{id}, #{localeId}, #{value})
    </insert>

    <!--suppress SqlResolve -->
    <delete id="deleteStringValue" parameterType="map">
        DELETE FROM "${entityName}_string_value" WHERE "id" IN
          (SELECT a."value_id" FROM "${entityName}_attribute" a
            LEFT JOIN entity_attribute ea ON a.entity_attribute_id = ea.id
          WHERE a."object_id" = #{objectId} AND ea.value_type_id IN (0, 1, 2, 3, 4, 5))
    </delete>
</mapper>
