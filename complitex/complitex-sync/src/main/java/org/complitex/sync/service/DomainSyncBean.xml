<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.sync.service.DomainSyncBean">
    <resultMap id="domainSyncResultMap" type="org.complitex.sync.entity.DomainSync">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="additional_parent_id" property="additionalParentId"/>
        <result column="external_id" property="externalId"/>
        <result column="additional_external_id" property="additionalExternalId"/>
        <result column="name" property="name"/>
        <result column="additional_name" property="additionalName"/>
        <result column="alt_name" property="altName"/>
        <result column="alt_additional_name" property="altAdditionalName"/>
        <result column="servicing_organization" property="servicingOrganization"/>
        <result column="balance_holder" property="balanceHolder"/>
        <result column="type" property="type"/>
        <result column="status" property="status"/>
        <result column="status_detail" property="statusDetail"/>
        <result column="date" property="date"/>
    </resultMap>

    <insert id="insertDomainSync" parameterType="org.complitex.sync.entity.DomainSync"
            useGeneratedKeys="true" keyProperty="id">
        insert into `domain_sync` (`parent_id`, `additional_parent_id`, `external_id`,
                                    `additional_external_id`, `name`, `additional_name`, `alt_name`, `alt_additional_name`,
                                    `servicing_organization`, `balance_holder`, `type`, `status`, `status_detail`, `date`)
        values (#{parentId}, #{additionalParentId}, #{externalId}, #{additionalExternalId},
                #{name}, #{additionalName}, #{altName}, #{altAdditionalName}, #{servicingOrganization}, #{balanceHolder},
                #{type}, #{status}, #{statusDetail}, #{date})
    </insert>

    <delete id="deleteDomainSync" parameterType="long">
        delete from `domain_sync` where `id` = #{id}
    </delete>

    <delete id="deleteDomainSyncBySyncEntity" parameterType="org.complitex.sync.entity.SyncEntity">
        delete from `domain_sync` where `type` = #{type}
    </delete>

    <select id="selectDomainSync" parameterType="long" resultMap="domainSyncResultMap">
        select * from `domain_sync` where `id` = #{id}
    </select>

    <sql id="selectDomainSyncWhere">
        <where>
            <if test="object.parentId != null">and `parent_id` = #{object.parentId}</if>
            <if test="object.additionalParentId != null">and `additional_parent_id` = #{object.additionalParentId}</if>
            <if test="object.externalId != null">and `external_id` = #{object.externalId}</if>
            <if test="object.additionalExternalId != null">and `additional_external_id` = #{object.additionalExternalId}</if>
            <if test="object.name != null">and `name` like concat('%', #{object.name}, '%')</if>
            <if test="object.additionalName != null">and `additional_name` = #{object.additionalName}</if>
            <if test="object.altName != null">and `alt_name` like concat('%', #{object.altName}, '%')</if>
            <if test="object.altAdditionalName != null">and `alt_additional_name` = #{object.altAdditionalName}</if>
            <if test="object.servicingOrganization != null">and `servicing_organization` = #{object.servicingOrganization}</if>
            <if test="object.balanceHolder != null">and `balance_holder` = #{object.balanceHolder}</if>
            <if test="object.type != null">and `type` = #{object.type}</if>
            <if test="object.status != null">and `status` = #{object.status}</if>
            <if test="object.statusDetail != null">and `status_detail` = #{object.statusDetail}</if>
        </where>
    </sql>

    <select id="selectDomainSyncList" parameterType="org.complitex.common.entity.FilterWrapper"
            resultMap="domainSyncResultMap">
        select * from `domain_sync` <include refid="selectDomainSyncWhere"/> ${orderLimit}
    </select>

    <select id="selectDomainSyncCount" parameterType="org.complitex.common.entity.FilterWrapper" resultType="long">
        select count(*) from `domain_sync` <include refid="selectDomainSyncWhere"/>
    </select>

    <select id="selectDomainSyncFilters" parameterType="org.complitex.sync.entity.SyncEntity"
            resultType="org.complitex.sync.entity.DomainSyncFilter">
        select `status`, count(*) as `count` from domain_sync where type = #{syncEntity} group by `status`
    </select>
</mapper>

