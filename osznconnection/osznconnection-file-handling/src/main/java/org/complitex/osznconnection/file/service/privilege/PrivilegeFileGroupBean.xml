<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.complitex.osznconnection.file.service.privilege.PrivilegeFileGroupBean">
    <resultMap id="privilegeFileGroupResultMap" type="org.complitex.osznconnection.file.entity.privilege.PrivilegeFileGroup">
        <id column="gid" property="id"/>
        
        <result column="loaded_record_count" property="loadedRecordCount"/>
        <result column="binded_record_count" property="bindedRecordCount"/>
        <result column="filled_record_count" property="filledRecordCount"/>

        <result column="status" property="status"/>

        <association property="firstRequestFile" javaType="org.complitex.osznconnection.file.entity.RequestFile">
            <id column="f_id" property="id"/>
            <result column="f_group_id" property="groupId"/>
            <result column="f_loaded" property="loaded"/>
            <result column="f_name" property="name"/>
            <result column="f_directory" property="directory"/>
            <result column="f_organization_id" property="organizationId"/>
            <result column="f_user_organization_id" property="userOrganizationId"/>
            <result column="f_begin_date" property="beginDate"/>
            <result column="f_end_date" property="endDate"/>
            <result column="f_dbf_record_count" property="dbfRecordCount"/>
            <result column="f_length" property="length"/>
            <result column="f_check_sum" property="checkSum"/>
            <result column="f_type" property="type"/>
            <result column="f_status" property="status"/>
        </association>
        <association property="secondRequestFile" javaType="org.complitex.osznconnection.file.entity.RequestFile">
            <id column="s_id" property="id"/>
            <result column="s_group_id" property="groupId"/>
            <result column="s_loaded" property="loaded"/>
            <result column="s_name" property="name"/>
            <result column="s_directory" property="directory"/>
            <result column="s_organization_id" property="organizationId"/>
            <result column="s_user_organization_id" property="userOrganizationId"/>
            <result column="s_begin_date" property="beginDate"/>
            <result column="s_end_date" property="endDate"/>
            <result column="s_dbf_record_count" property="dbfRecordCount"/>
            <result column="s_length" property="length"/>
            <result column="s_check_sum" property="checkSum"/>
            <result column="s_type" property="type"/>
            <result column="s_status" property="status"/>
        </association>
    </resultMap>

    <sql id="permissionFilter">
        <if test="not admin">
            AND ((f.`user_organization_id` IS NULL OR f.`user_organization_id` IN ${userOrganizationsString})
            AND (s.`user_organization_id` IS NULL OR s.`user_organization_id` IN ${userOrganizationsString}))

            <if test="outerOrganizationsString != null">
                AND (f.`organization_id` IN ${outerOrganizationsString})
            </if>
        </if>
    </sql>

    <sql id="requestFileGroupFilterWhere">
        <where>            
            <if test="id != null">and g.group_id = #{id}</if>
            <if test="loaded != null">
                and ((YEAR(f.`loaded`) = YEAR(#{loaded}) and DAYOFYEAR(f.`loaded`) = DAYOFYEAR(#{loaded})) or
                  (YEAR(s.`loaded`) = YEAR(#{loaded}) and DAYOFYEAR(s.`loaded`) = DAYOFYEAR(#{loaded})))
            </if>
            <if test="firstName != null">and f.`name` like CONCAT('%',#{firstName},'%')</if>
            <if test="secondName != null">and s.`name` like CONCAT('%',#{secondName},'%')</if>
            <if test="organizationId != null">
                and (f.`organization_id` = #{organizationId} or s.`organization_id` = #{organizationId})
            </if>
            <if test="userOrganizationId != null">
                and (f.`user_organization_id` = #{userOrganizationId} or s.`user_organization_id` = #{userOrganizationId})
            </if>
            <if test="year != null">and (YEAR(f.`begin_date`) = #{year} or YEAR(s.`begin_date`) = #{year})</if>
            <if test="month != null">and (MONTH(f.`begin_date`) = #{month} or MONTH(s.`begin_date`) = #{month})</if>
            <if test="status != null">and (f.`status` = #{status} or s.`status` = #{status})</if>
            <if test="edrpou != null">
                and (f.`name` like concat('%', #{edrpou}, '%') or s.`name` like concat('%', #{edrpou}, '%'))
            </if>

            <include refid="permissionFilter"/>
        </where>
    </sql>

    <select id="selectPrivilegeFilesGroups" parameterType="org.complitex.osznconnection.file.entity.RequestFileFilter" 
            resultMap="privilegeFileGroupResultMap">
        select
        g.group_id as gid,
        if(f.status is not null, f.status, s.status) as `status`,

        f.id as f_id, f.group_id as f_group_id, f.loaded as f_loaded, f.name as f_name, f.directory as f_directory,
        f.organization_id as f_organization_id, f.`user_organization_id` as f_user_organization_id,
        f.begin_date as f_begin_date, f.end_date as f_end_date, f.dbf_record_count as f_dbf_record_count,
        f.length as f_length, f.check_sum as f_check_sum, f.type as f_type, f.status as f_status,

        s.id as s_id, s.group_id as s_group_id, s.loaded as s_loaded, s.name as s_name, s.directory as s_directory,
        s.organization_id as s_organization_id, s.`user_organization_id` as s_user_organization_id,
        s.begin_date as s_begin_date, s.end_date as s_end_date, s.dbf_record_count as s_dbf_record_count,
        s.length as s_length, s.check_sum as s_check_sum, s.type as s_type, s.status as s_status,

        if(f.`id` is not null,
          (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id`),
          (select count(1) from `facility_service_type` where `request_file_id` = s.`id`))
        as loaded_record_count,

        if(f.`id` is not null,
          (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id` and `account_number` is not null),
          (select count(1) from `facility_service_type` where `request_file_id` = s.`id` and `account_number` is not null))
        as binded_record_count,

        if(f.`id` is not null,
          (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id` and `status` = 215),
          (select count(1) from `facility_service_type` where `request_file_id` = s.`id` and `status` = 215))
        as filled_record_count

        from (select group_id from request_file where type in (6, 7) group by group_id) g
            left join request_file f on (f.group_id = g.group_id and f.type = 6)
            left join request_file s on (s.group_id = g.group_id and s.type = 7)
        
        <include refid="requestFileGroupFilterWhere"/>
        
        <if test="sortProperty != null">
            <choose>
                <when test="sortProperty == 'id'">order by  g.`group_id`</when>
                <when test="sortProperty == 'status'">order by f.`status`</when>
                <when test="sortProperty == 'firstName'">order by f.`name`</when>
                <when test="sortProperty == 'secondName'">order by s.`name`</when>
                <when test="sortProperty == 'service_provider'">order by f.`name`</when>
                <when test="sortProperty == 'month'">order by MONTH(f.`begin_date`)</when>
                <when test="sortProperty == 'year'">order by YEAR(f.`begin_date`)</when>
                <otherwise>order by if(f.`id` is not null, f.`${sortProperty}`, s.`${sortProperty}`)</otherwise>
            </choose>
            <choose>
                <when test="ascending">asc</when>
                <otherwise>desc</otherwise>
            </choose>
        </if>
        
        ${limit}
    </select>
    
    <select id="selectPrivilegeFilesGroupsCount" parameterType="org.complitex.osznconnection.file.entity.RequestFileFilter"
            resultType="long">
        select count(distinct g.`group_id`)
        from (select group_id from request_file where type = 6 or type = 7 group by group_id) g
        left join request_file f on (f.group_id = g.group_id and f.type = 6)
        left join request_file s on (s.group_id = g.group_id and s.type = 7)
        <include refid="requestFileGroupFilterWhere"/>
    </select>

    <select id="selectPrivilegeFileGroup" resultMap="privilegeFileGroupResultMap" parameterType="long">
        select
            g.group_id as gid,

            f.id as f_id, f.group_id as f_group_id, f.loaded as f_loaded, f.name as f_name, f.directory as f_directory,
            f.organization_id as f_organization_id, f.`user_organization_id` as f_user_organization_id,
            f.begin_date as f_begin_date, f.end_date as f_end_date, f.dbf_record_count as f_dbf_record_count,
            f.length as f_length, f.check_sum as f_check_sum, f.type as f_type, f.status as f_status,

            f.status as `status`,

            s.id as s_id, s.group_id as s_group_id, s.loaded as s_loaded, s.name as s_name, s.directory as s_directory,
            s.organization_id as s_organization_id, s.`user_organization_id` as s_user_organization_id,
            s.begin_date as s_begin_date, s.end_date as   s_end_date, s.dbf_record_count as s_dbf_record_count,
            s.length as s_length, s.check_sum as s_check_sum, s.type as s_type, s.status as s_status,

            if(f.`id` is not null,
              (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id`),
              (select count(1) from `facility_service_type` where `request_file_id` = s.`id`))
            as loaded_record_count,

            if(f.`id` is not null,
              (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id` and `account_number` is not null),
              (select count(1) from `facility_service_type` where `request_file_id` = s.`id` and `account_number` is not null))
            as binded_record_count,

            if(f.`id` is not null,
              (select count(1) from `dwelling_characteristics` where `request_file_id` = f.`id` and `status` = 215),
              (select count(1) from `facility_service_type` where `request_file_id` = s.`id` and `status` = 215))
            as filled_record_count

        from (select group_id from request_file where type = 6 or type = 7 group by group_id) g
            left join request_file f on (f.group_id = g.group_id and f.type = 6)
            left join request_file s on (s.group_id = g.group_id and s.type = 7)
        where g.group_id = #{group}
    </select>



</mapper>