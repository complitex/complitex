<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.complitex.osznconnection.file.service.subsidy.BenefitBean">
    <resultMap id="benefitResultMap" type="ru.complitex.osznconnection.file.entity.subsidy.Benefit"
                extends="ru.complitex.osznconnection.file.service.AbstractRequestBean.abstractRequest">

        <result column="city" property="city"/>
        <result column="street" property="street"/>
        <result column="building_number" property="buildingNumber"/>
        <result column="building_corp" property="buildingCorp"/>
        <result column="apartment" property="apartment"/>

        <result column="SUR_NAM_CYR" property="lastName"/>
        <result column="F_NAM_CYR" property="firstName"/>
        <result column="M_NAM_CYR" property="middleName"/>

        <result column="group_id" property="groupId"/>

        <association property="dbfFields" javaType="map">
            <result column="OWN_NUM" property="OWN_NUM"/>
            <result column="REE_NUM" property="REE_NUM"/>
            <result column="OWN_NUM_SR" property="OWN_NUM_SR"/>
            <result column="FAM_NUM" property="FAM_NUM"/>
            <result column="SUR_NAM" property="SUR_NAM"/>
            <result column="F_NAM" property="F_NAM"/>
            <result column="M_NAM" property="M_NAM"/>
            <result column="IND_COD" property="IND_COD"/>
            <result column="PSP_SER" property="PSP_SER"/>
            <result column="PSP_NUM" property="PSP_NUM"/>
            <result column="OZN" property="OZN"/>
            <result column="CM_AREA" property="CM_AREA"/>
            <result column="HEAT_AREA" property="HEAT_AREA"/>
            <result column="OWN_FRM" property="OWN_FRM"/>
            <result column="HOSTEL" property="HOSTEL"/>
            <result column="PRIV_CAT" property="PRIV_CAT"/>
            <result column="ORD_FAM" property="ORD_FAM"/>
            <result column="OZN_SQ_ADD" property="OZN_SQ_ADD"/>
            <result column="OZN_ABS" property="OZN_ABS"/>
            <result column="RESERV1" property="RESERV1"/>
            <result column="RESERV2" property="RESERV2"/>
        </association>
    </resultMap>

    <select id="selectBenefits" resultMap="benefitResultMap" parameterType="long">
        SELECT b.*,
            w."id" warning_id, w."request_id" warning_reqiest_id, w."request_file_type" warning_request_file_type, w."status" warning_status,
            p."request_warning_id" param_request_warning_id, p."order" param_order, p."type" param_type, p."value" param_value
        FROM "benefit" b
            LEFT JOIN "request_warning" w ON (w."request_id" = b."id" AND w."request_file_type" = 1)
            LEFT JOIN "request_warning_parameter" p ON w."id" = p."request_warning_id"
        WHERE b."request_file_id" = #{id}
    </select>

    <insert id="insertBenefit" parameterType="ru.complitex.osznconnection.file.entity.subsidy.Benefit">
        INSERT INTO "benefit"
        (
        <trim suffixOverrides=",">
            "request_file_id", "account_number", "status",
            <foreach collection="dbfFields.keys" item="key">
                "${key}",
            </foreach>
        </trim>
        )
        values
        (
        <trim suffixOverrides=",">
            #{requestFileId}, #{accountNumber}, #{status},
            <foreach collection="dbfFields.keys" item="key">
                #{dbfFields.${key}},
            </foreach>
        </trim>
        )
    </insert>

    <insert id="insertBenefitList" parameterType="list">
        INSERT INTO "benefit"
        (
        <trim suffixOverrides=",">
            "request_file_id", "account_number", "status",
            <foreach collection="list[0].dbfFields.keys" item="key">
                "${key}",
            </foreach>
        </trim>
        )
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            <trim suffixOverrides=",">
                #{item.requestFileId}, #{item.accountNumber}, #{item.status},
                <foreach collection="item.dbfFields.keys" item="key">
                    #{item.dbfFields.${key}},
                </foreach>
            </trim>
            )
        </foreach>
    </insert>

    <update id="updateBenefit" parameterType="ru.complitex.osznconnection.file.entity.subsidy.Benefit">
        UPDATE "benefit"
        <set>
            "request_file_id" = #{requestFileId}, "account_number" = #{accountNumber}, "status" = #{status},
            <foreach collection="dbfFields.keys" item="key">
                "${key}" = #{dbfFields[key]},
            </foreach>
        </set>
        WHERE
        "id" = #{id}
    </update>

    <delete id="deleteBenefits" parameterType="long">
        DELETE FROM "benefit" WHERE "request_file_id" = #{id};
    </delete>

    <sql id="filter">
        <if test="account != null">
            AND b."OWN_NUM_SR" LIKE CONCAT('%',#{account},'%')
        </if>
        <if test="puAccount != null">
            AND b."account_number" LIKE CONCAT('%',#{puAccount},'%')
        </if>
        <if test="firstName != null">
            AND TO_CYRILLIC(b."F_NAM") LIKE CONCAT('%',#{firstName},'%')
        </if>
        <if test="middleName != null">
            AND TO_CYRILLIC(b."M_NAM") LIKE CONCAT('%',#{middleName},'%')
        </if>
        <if test="lastName != null">
            AND TO_CYRILLIC(b."SUR_NAM") LIKE CONCAT('%',#{lastName},'%')
        </if>
        <if test="city != null">
            AND TO_CYRILLIC(p."N_NAME") LIKE CONCAT('%', #{city}, '%')
        </if>
        <if test="street != null">
            AND TO_CYRILLIC(p."VUL_NAME") LIKE CONCAT('%', #{street}, '%')
        </if>
        <if test="building != null">
            AND TO_CYRILLIC(p."BLD_NUM") LIKE CONCAT('%', #{building}, '%')
        </if>
        <if test="corp != null">
            AND TO_CYRILLIC(p."CORP_NUM") LIKE CONCAT('%', #{corp}, '%')
        </if>
        <if test="apartment != null">
            AND TO_CYRILLIC(p."FLAT") LIKE CONCAT('%', #{apartment}, '%')
        </if>
        <if test="privilege != null">
            AND b."PRIV_CAT" = #{privilege}
        </if>
        <if test="status != null">
            AND b."status" = #{status}
        </if>
    </sql>

    <select id="count" resultType="long" parameterType="ru.complitex.osznconnection.file.entity.example.BenefitExample">
        SELECT
            COUNT(DISTINCT b."id")
        FROM
            "benefit" b
            JOIN "request_file" bf ON b."request_file_id" = bf."id"
            JOIN "request_file" pf ON (pf."group_id" = bf."group_id" AND pf."type" = 2)
            LEFT JOIN "payment" p ON (b."OWN_NUM_SR" = p."OWN_NUM_SR" AND p."request_file_id" = pf."id")
        WHERE
            b."request_file_id" = #{requestFileId}
            <include refid="ru.complitex.osznconnection.file.service.subsidy.BenefitBean.filter"/>
    </select>

    <!--suppress SqlResolve -->
    <select id="find" resultMap="benefitResultMap"
            parameterType="ru.complitex.osznconnection.file.entity.example.BenefitExample">
        SELECT s.*,
        w."id" warning_id, w."request_id" warning_reqiest_id, w."request_file_type" warning_request_file_type, w."status" warning_status,
        p."request_warning_id" param_request_warning_id, p."order" param_order, p."type" param_type, p."value" param_value
        FROM (
            SELECT
                DISTINCT b."id", b."request_file_id", b."OWN_NUM_SR", b."F_NAM", b."M_NAM", b."SUR_NAM", b."status",

                TO_CYRILLIC(b."F_NAM") F_NAM_CYR,
                TO_CYRILLIC(b."M_NAM") M_NAM_CYR,
                TO_CYRILLIC(b."SUR_NAM") SUR_NAM_CYR,
                TO_CYRILLIC(p."N_NAME") city,
                TO_CYRILLIC(p."VUL_NAME") street,
                TO_CYRILLIC(p."BLD_NUM") building_number,
                TO_CYRILLIC(p."CORP_NUM") building_corp,
                TO_CYRILLIC(p."FLAT") apartment,

                bf."organization_id", bf."user_organization_id", bf."group_id",
                b."account_number", b."IND_COD", b."PSP_SER", b."PSP_NUM", b."PRIV_CAT"
            FROM
                "benefit" b
                    JOIN "request_file" bf ON b."request_file_id" = bf."id"
                    JOIN "request_file" pf ON (pf."group_id" = bf."group_id" AND pf."type" = 2)
                    LEFT JOIN "payment" p ON (b."OWN_NUM_SR" = p."OWN_NUM_SR" AND p."request_file_id" = pf."id")
                WHERE
                    b."request_file_id" = #{requestFileId}
                    <include refid="ru.complitex.osznconnection.file.service.subsidy.BenefitBean.filter"/>
                    <if test="orderByClause != null">
                        <choose>
                            <when test="orderByClause == 'building_number' or orderByClause == 'building_corp'
                                  or orderByClause == 'apartment'">
                                ORDER BY "${orderByClause}"+0
                            </when>
                            <when test="orderByClause == 'OWN_NUM_SR'">
                                ORDER BY b."${orderByClause}"+0
                            </when>
                            <otherwise>
                                ORDER BY "${orderByClause}"
                            </otherwise>
                        </choose>
                        <choose>
                            <when test="asc">
                                ASC
                            </when>
                            <otherwise>
                                DESC
                            </otherwise>
                        </choose>
                    </if>
                    <if test="count != 0">
                        OFFSET #{first} LIMIT #{count}
                    </if>
        ) s
        LEFT JOIN "request_warning" w ON (w."request_id" = s."id" AND w."request_file_type" = 1)
        LEFT JOIN "request_warning_parameter" p ON w."id" = p."request_warning_id"
    </select>

    <select id="countByFile" resultType="int" parameterType="map">
        SELECT COUNT(1) FROM "benefit" b
        WHERE b."request_file_id" = #{requestFileId} AND b."status" IN
        <foreach collection="statuses" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </select>

    <update id="updateBindingStatus" parameterType="map">
        UPDATE "benefit" b SET "status" =
        CASE NULLIF(
            (SELECT DISTINCT p."status" FROM "payment" p, "request_file" bf, "request_file" pf
                WHERE b."OWN_NUM_SR" = p."OWN_NUM_SR" AND bf."id" = b.request_file_id AND pf."id" = p."request_file_id"
                    AND bf."group_id" = pf."group_id"),
               '-1')
            WHEN '-1' THEN 220
            <foreach collection="statuses" item="status">
                WHEN #{status} THEN #{status}
            </foreach>
            ELSE 214
        END
        WHERE b."request_file_id" = #{fileId}
    </update>

    <!--suppress SqlResolve -->
    <sql id="updateByOWN_NUM_SR">
        WHERE b."OWN_NUM_SR" = (SELECT DISTINCT p."OWN_NUM_SR" FROM "payment" p, "request_file" pf, "request_file" bf
            WHERE p."request_file_id" = pf."id" AND b."request_file_id" = bf."id" AND p."id" = #{paymentId}
                AND bf."group_id" = pf."group_id")
    </sql>

    <update id="markCorrected" parameterType="long">
        UPDATE "benefit" b SET "status" = 204
            FROM "request_file" bf
                JOIN "request_file_group" g ON g."id" = bf."group_id"
                JOIN "request_file" pf ON (pf."group_id" = g."id" AND pf."type" = 2 AND pf."id" = #{paymentFileId})
                JOIN "payment" p ON (p."request_file_id" = pf."id" AND p."status" = 204 AND p."OWN_NUM_SR" = b."OWN_NUM_SR")
            WHERE b."request_file_id" = bf."id" AND bf."type" = 1
    </update>

    <update id="updateAccountNumber" parameterType="map">
        UPDATE "benefit" b SET "account_number" = #{accountNumber}, "status" = #{status}
        <include refid="ru.complitex.osznconnection.file.service.subsidy.BenefitBean.updateByOWN_NUM_SR"/>
    </update>

    <update id="populateBenefit" parameterType="ru.complitex.osznconnection.file.entity.subsidy.Benefit">
        UPDATE "benefit" SET
        "CM_AREA" = #{dbfFields.CM_AREA}::numeric, "OWN_FRM" = #{dbfFields.OWN_FRM}, "HOSTEL" = #{dbfFields.HOSTEL}
        WHERE "id" = #{id}
    </update>

    <select id="findByOZN" parameterType="ru.complitex.osznconnection.file.entity.subsidy.Payment" resultMap="benefitResultMap">
        SELECT b."id", b."status", b."account_number", b."request_file_id", bf."organization_id", bf."user_organization_id"
            FROM "benefit" b
            JOIN "request_file" bf ON b."request_file_id" = bf."id"
            JOIN "request_file" pf ON (pf."id" = #{requestFileId} AND pf."type" = 2 AND pf."group_id" = bf."group_id")
            WHERE b."account_number" = #{accountNumber} AND b."OZN" = '1'
    </select>

    <select id="allAccountNumbers" parameterType="map" resultType="string">
        SELECT DISTINCT b."account_number" FROM "benefit" b
        WHERE b."request_file_id" = #{fileId}
        AND b."account_number" IS NOT NULL
    </select>

    <select id="findByAccountNumber" parameterType="map" resultMap="benefitResultMap">
        SELECT b."id", b."status", b."account_number", bf."organization_id",  bf."user_organization_id",
            b."request_file_id",
            b."IND_COD",
            b."PSP_NUM",
            b."ORD_FAM",
            b."PRIV_CAT",
            b."OZN_ABS"
        FROM "benefit" b
            JOIN "request_file" bf ON b."request_file_id" = bf."id"
        WHERE b."account_number" = #{accountNumber} AND bf."id" = #{fileId}
    </select>

    <update id="update" parameterType="ru.complitex.osznconnection.file.entity.subsidy.Benefit">
        UPDATE "benefit" SET
            "status" = #{status},
            "ORD_FAM" = #{dbfFields.ORD_FAM},
            "PRIV_CAT" = #{dbfFields.PRIV_CAT},
            "OZN_ABS" = #{dbfFields.OZN_ABS}
        WHERE
            "id" = #{id}
    </update>

    <update id="clearBeforeBinding" parameterType="map">
        UPDATE "benefit" SET
            "status" = #{status},
            "ORD_FAM" = NULL,
            "PRIV_CAT" = NULL,
            "CM_AREA" = NULL,
            "OWN_FRM" = NULL,
            "HOSTEL" = NULL,
            "OZN_ABS" = NULL,
            "account_number" = NULL
        WHERE
            "request_file_id" = #{fileId}
    </update>

    <update id="clearBeforeProcessing" parameterType="map">
        UPDATE "benefit" SET
            "ORD_FAM" = NULL,
            "PRIV_CAT" = NULL,
            "CM_AREA" = NULL,
            "OWN_FRM" = NULL,
            "HOSTEL" = NULL,
            "OZN_ABS" = NULL,
            "status" = CASE "status"
                            <foreach collection="statuses" item="status">
                                WHEN #{status} THEN #{status}
                            </foreach>
                            ELSE 214
                         END
        WHERE
            "request_file_id" = #{fileId}
    </update>

    <update id="updateStatusByAccountNumber" parameterType="map">
        UPDATE "benefit" SET "status" = #{status}
            WHERE "request_file_id" = #{fileId} AND "account_number" = #{accountNumber}
    </update>
</mapper>
